// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"
	linktrailers "movie/businesses/linktrailers"

	mock "github.com/stretchr/testify/mock"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// CreateLinkRepository provides a mock function with given fields: ctx, domain
func (_m *Repository) CreateLinkRepository(ctx context.Context, domain *linktrailers.Domain) (linktrailers.Domain, error) {
	ret := _m.Called(ctx, domain)

	var r0 linktrailers.Domain
	if rf, ok := ret.Get(0).(func(context.Context, *linktrailers.Domain) linktrailers.Domain); ok {
		r0 = rf(ctx, domain)
	} else {
		r0 = ret.Get(0).(linktrailers.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *linktrailers.Domain) error); ok {
		r1 = rf(ctx, domain)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteLinkRepository provides a mock function with given fields: ctx, idLink, domain
func (_m *Repository) DeleteLinkRepository(ctx context.Context, idLink int, domain *linktrailers.Domain) error {
	ret := _m.Called(ctx, idLink, domain)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int, *linktrailers.Domain) error); ok {
		r0 = rf(ctx, idLink, domain)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllLinkRepository provides a mock function with given fields: ctx, domain
func (_m *Repository) GetAllLinkRepository(ctx context.Context, domain *linktrailers.Domain) (linktrailers.Domain, error) {
	ret := _m.Called(ctx, domain)

	var r0 linktrailers.Domain
	if rf, ok := ret.Get(0).(func(context.Context, *linktrailers.Domain) linktrailers.Domain); ok {
		r0 = rf(ctx, domain)
	} else {
		r0 = ret.Get(0).(linktrailers.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *linktrailers.Domain) error); ok {
		r1 = rf(ctx, domain)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLinkbyId provides a mock function with given fields: ctx, idLink
func (_m *Repository) GetLinkbyId(ctx context.Context, idLink int) (linktrailers.Domain, error) {
	ret := _m.Called(ctx, idLink)

	var r0 linktrailers.Domain
	if rf, ok := ret.Get(0).(func(context.Context, int) linktrailers.Domain); ok {
		r0 = rf(ctx, idLink)
	} else {
		r0 = ret.Get(0).(linktrailers.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int) error); ok {
		r1 = rf(ctx, idLink)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateLinkRepository provides a mock function with given fields: ctx, idLink, domain
func (_m *Repository) UpdateLinkRepository(ctx context.Context, idLink int, domain *linktrailers.Domain) error {
	ret := _m.Called(ctx, idLink, domain)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int, *linktrailers.Domain) error); ok {
		r0 = rf(ctx, idLink, domain)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
